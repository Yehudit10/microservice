version: "3.9"

services:
  # security:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.security
  #   image: security-microservice
  #   environment:
  #     - PYTHONPATH=/app
  #   volumes:
  #     - ./agguard/app:/app/agguard/app
  #     - ./agguard/core:/app/agguard/core
  #     - ./agguard/specialists:/app/agguard/specialists
  #     - ./agguard/pipeline:/app/agguard/pipeline
  #     - ./agguard/adapters:/app/agguard/adapters
  #     - ./agguard/media:/app/agguard/media
  #     - ./agguard/pipeline:/app/agguard/pipeline
  #     - ./tools:/app/tools
  #     - ./configs:/app/configs
  #   ports:
  #     - "50052:50051"
    
  flink-jobmanager:
    build:
      context: .
      dockerfile: Dockerfile.flink
    image: agguard-flink:latest
    container_name: flink-jobmanager
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
      - KAFKA_BROKERS=kafka:9092
      - IN_TOPIC=dev-camera-security
      - OUT_TOPIC=incidents.events
    volumes:
      - ./agguard/app:/app/agguard/app
      - ./agguard/core:/app/agguard/core
      - ./agguard/specialists:/app/agguard/specialists
      - ./agguard/pipeline:/app/agguard/pipeline
      - ./agguard/adapters:/app/agguard/adapters
      - ./agguard/media:/app/agguard/media
      - ./agguard/pipeline:/app/agguard/pipeline
      - ./tools:/app/tools
      - ./configs:/app/configs
    ports:
      - "8081:8081"

  flink-taskmanager:
    image: agguard-flink:latest
    container_name: flink-taskmanager
    command: taskmanager -D taskmanager.numberOfTaskSlots=4
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
      - KAFKA_BROKERS=kafka:9092
      - IN_TOPIC=dev-camera-security
      - OUT_TOPIC=incidents.events
      - taskmanager.numberOfTaskSlots=4
    volumes:
      - ./agguard/app:/app/agguard/app
      - ./agguard/core:/app/agguard/core
      - ./agguard/specialists:/app/agguard/specialists
      - ./agguard/pipeline:/app/agguard/pipeline
      - ./agguard/adapters:/app/agguard/adapters
      - ./agguard/media:/app/agguard/media
      - ./agguard/pipeline:/app/agguard/pipeline
      - ./tools:/app/tools
      - ./configs:/app/configs
    depends_on:
      - flink-jobmanager


  # client:
  #   image: security-microservice
  #   # depends_on: [security]
  #   working_dir: /app
  #   environment:
  #     - PYTHONPATH=/app
  #   volumes:
  #     - "C:/output_frames4/dev_a:/data/frames/dev_a:ro"
  #     - "C:/output_frames4/dev_b:/data/frames/dev_b:ro"
  #   command: python tools/grpc_client.py

  alertmanager:
    image: prom/alertmanager:v0.27.0
    container_name: alertmanager
    volumes:
      - ./configs/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
      - "--log.level=info"
    ports:
      - "9093:9093"

  alerts-gateway:
    build:
      context: .
      dockerfile: Dockerfile.security
    command: uvicorn agguard.app.alerts_gateway:app --host 0.0.0.0 --port 8090
    environment:
      - PYTHONPATH=/app
    ports:
      - "8090:8090"
    volumes:
      - .:/app                # optional: live reload during dev

  media-proxy:
    build:
      context: .
      dockerfile: Dockerfile.security
    command: uvicorn agguard.app.media_proxy:app --host 0.0.0.0 --port 8080
    environment:
      - MEDIA_AUTH_TOKEN=CHANGE_ME
      - PYTHONPATH=/app
    ports:
      - "8089:8080"
    volumes:
      - .:/app                # optional: live reload for dev

  mask-classifier:
    build:
      context: .
      dockerfile: Dockerfile.mask-classifier
    image: agguard-mask-classifier:latest
    environment:
      - PORT=50061
      - BACKEND=onnx
      - MODEL_PATH=/app/weights/mask_yolov8.onnx
      - CLASSES=no_mask,mask
      - IMGSZ=224
      - DEVICE=cpu
    volumes:
      - ./weights:/app/weights:ro
    expose:
      - "50061"

  anomalies-classifier:
    build:
      context: .
      dockerfile: Dockerfile.anomalies-classifier
    image: agguard-anomalies-classifier:latest
    container_name: clip-classifier
    volumes:
      - ./weights:/weights:ro
    environment:
      - PORT=50062
      - DEVICE=cpu
      - CLIP_MODEL=RN50
      - CLIP_PRETRAINED=openai
      - CLIP_INPUT_SIZE=224
      - CLIP_TEMPERATURE=100.0
      - CLIP_BATCH=32
      - ENABLE_MKLDNN=1
      - NUM_THREADS=6
    expose:
      - "50062"

  # Example: MegaDetector service (optional)
  mega-detector:
    build:
      context: .
      dockerfile: Dockerfile.mega-detector
    image: mega-detector:latest
    environment:
      - PORT=50063
      - MODEL_NAME=MDV5A 
      - CONF_THRESH=0.2
      - DEVICE=cpu
    volumes:
      - ./agguard/specialists/megadetector_service:/app/agguard/specialists/megadetector_service
      - ./weights:/app/weights:ro
    expose:
      - "50063"
    container_name: mega-detector
  
    # animal-classifier:
    # build:
    #   context: .
    #   dockerfile: Dockerfile.animal-classifier
    # image: agguard-animal-classifier:latest
    # environment:
    #   - PORT=50064
    #   - MODEL_PATH=/app/weights/yolov8n-cls.pt
    #   - DEVICE=cpu
    # volumes:
    #   - ./weights:/app/weights:ro
    #   - ./agguard/specialists/animal_service/server:/app/agguard/specialists/animal_service/server
    # expose:
    #   - "50064"


networks:
  default:
    external: true
    name: agcloud_ag_cloud
