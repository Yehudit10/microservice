############################
# Stage 1: Export YOLO -> ONNX (detector)
############################
FROM python:3.12-slim AS exporter

RUN apt-get update && apt-get install -y --no-install-recommends \
      ca-certificates libgl1 libglib2.0-0 \
    && rm -rf /var/lib/apt/lists/*

# Install minimal deps to export ONNX
RUN python -m pip install --upgrade pip && \
    pip install --no-cache-dir \
      ultralytics==8.3.0 \
      torch==2.2.2+cpu \
      torchvision==0.17.2+cpu \
      onnx \
      --extra-index-url https://download.pytorch.org/whl/cpu

WORKDIR /w
RUN python - <<'PY'
from ultralytics import YOLO
m = YOLO("yolov8n.pt")  # auto-download
out_path = m.export(format="onnx", opset=12, simplify=False, dynamic=False)
print("Exported:", out_path)
PY


############################
# Stage 2: Runtime
############################
FROM python:3.12-slim

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    OMP_NUM_THREADS=1 \
    OPENBLAS_NUM_THREADS=1 \
    MKL_NUM_THREADS=1 \
    OPENCV_OPENCL_RUNTIME=disabled

# System libs for OpenCV & ffmpeg
RUN apt-get update && apt-get install -y --no-install-recommends \
      build-essential \
      libglib2.0-0 \
      libgl1 \
      libstdc++6 \
      ca-certificates \
      ffmpeg \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# -------- Python deps --------

COPY requirements.txt .
RUN --mount=type=cache,target=/root/.cache/pip \
    python -m pip install --upgrade pip && \
    python -m pip install --no-cache-dir -r requirements.txt

# -------- App sources --------
COPY agguard ./agguard


# -------- Runtime config --------
ENV AGGUARD_CFG=/app/configs/default.yaml
EXPOSE 50051

# Default command â€” same as before
CMD ["python", "-m", "agguard.app.grpc_server"]
